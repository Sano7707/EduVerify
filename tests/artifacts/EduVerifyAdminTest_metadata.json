{
	"compiler": {
		"version": "0.8.30+commit.73712a01"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"name": "beforeAll",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "testAddExistingGovernor",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "testAddGovernor",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "testGetInvalidProposal",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "testInitialSetup",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "testInsufficientVotesExecution",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "testNonGovernorCannotpropose",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "testProposalCreation",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "testProposalExecution",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "testRemoveGovernor",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "testThresholdCalculation",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "testVoteOnInvalidProposal",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "testVoting",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"tests/EduVerifyAdmin_test.sol": "EduVerifyAdminTest"
		},
		"evmVersion": "prague",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
			"keccak256": "0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84",
			"license": "MIT",
			"urls": [
				"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9",
				"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n"
			]
		},
		"new-contracts/EduVerifyAdmin.sol": {
			"keccak256": "0x6504b552153c1500f00ebcde6ec3e1266f15c0e88b27b0fae536eb13ee29cb70",
			"license": "MIT",
			"urls": [
				"bzz-raw://4a8c5e94d54eee8659cab0f9367fdffcf3b352c5f4a0895b3d6df009447a0551",
				"dweb:/ipfs/QmaARp4THw7hhDPbxg88eAQJEoT6qbnpafAKaJNKpwJrK8"
			]
		},
		"remix_tests.sol": {
			"keccak256": "0xe2783cdc204cba8c72494119339f1d90f9022b15d6c718c668b7f097d8e29787",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://bb6a22e64c7f16bcaab63b1c1a1b269d5be8a6d37bdd9dec1718477ab916b18e",
				"dweb:/ipfs/QmdkW1tT5iadBvaHMCoskhDGZKnfdg8o1D9CcoQYtdJet7"
			]
		},
		"tests/EduVerifyAdmin_test.sol": {
			"keccak256": "0xe62207b4142da1c61751589a57dcd1b6fe4cc56790f88b5998fe974bf4fd87eb",
			"license": "MIT",
			"urls": [
				"bzz-raw://3a7cf7c09f7bf3bf4d46c7dd59307f891b729361a3c4bb8ed6705ee3c3fa3462",
				"dweb:/ipfs/QmQSWh3ENuVVrsLSzGkwsxx6rYErZbrYvC8tnvfpteYeqF"
			]
		},
		"tests/Governor.sol": {
			"keccak256": "0x3802420c5cbcbfcb57ea2233ea026b0fc08afd106f92d59f6bc00cb67fc60c58",
			"license": "MIT",
			"urls": [
				"bzz-raw://689425a5a7b066eff1506db125acdd987d21c86c3a1442138e8764195d828932",
				"dweb:/ipfs/QmSd2sKVCVWtRncTGiwy8pbrJcPLA8StnhLPG6DeGi5qgj"
			]
		}
	},
	"version": 1
}